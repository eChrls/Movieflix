#!/bin/bash
# Script seguro para correcci√≥n de URLs p√≥sters MovieFlix
# Incluye backup autom√°tico, validaciones y rollback

set -e  # Salir si cualquier comando falla

echo "üîß MovieFlix - Correcci√≥n Segura URLs P√≥sters TMDb"
echo "=================================================="
echo ""

# Variables de configuraci√≥n
BACKUP_DIR="/var/www/movieflix/backend/backup"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_FILE="$BACKUP_DIR/movieflix_before_poster_fix_$TIMESTAMP.sql"
APP_DIR="/var/www/movieflix/backend"

# Funci√≥n para log con timestamp
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# Funci√≥n de cleanup en caso de error
cleanup() {
    log "‚ùå Error detectado. Limpiando..."
    if [ -f "$BACKUP_FILE" ]; then
        log "üìÑ Backup disponible en: $BACKUP_FILE"
        echo "Para restaurar ejecuta:"
        echo "mysql -h192.168.1.50 -umovieflix_user -p movieflix_db < $BACKUP_FILE"
    fi
    exit 1
}

# Configurar trap para errores
trap cleanup ERR

# Verificar que estamos en el directorio correcto
log "üîç Verificando ubicaci√≥n..."
cd "$APP_DIR" || {
    echo "‚ùå Error: No se puede acceder a $APP_DIR"
    exit 1
}

if [ ! -f "scripts/fix-poster-urls.js" ]; then
    echo "‚ùå Error: Script fix-poster-urls.js no encontrado"
    exit 1
fi

# Verificar conexi√≥n a base de datos
log "üîå Verificando conexi√≥n a base de datos..."
if ! timeout 10 mysql -h192.168.1.50 -umovieflix_user -p"movieflix_secure_2025!" movieflix_db -e "SELECT 1;" >/dev/null 2>&1; then
    echo "‚ùå Error: No se puede conectar a la base de datos"
    exit 1
fi

# Crear directorio de backup si no existe
mkdir -p "$BACKUP_DIR"

# Realizar backup autom√°tico
log "üíæ Creando backup autom√°tico..."
mysqldump -h192.168.1.50 -umovieflix_user -p"movieflix_secure_2025!" movieflix_db content > "$BACKUP_FILE"

if [ ! -f "$BACKUP_FILE" ] || [ ! -s "$BACKUP_FILE" ]; then
    echo "‚ùå Error: Backup fall√≥"
    exit 1
fi

log "‚úÖ Backup creado: $BACKUP_FILE ($(du -h "$BACKUP_FILE" | cut -f1))"

# Sincronizar c√≥digo desde GitHub
log "üîÑ Sincronizando c√≥digo desde GitHub..."
git pull origin main

# Verificar que hay contenido para corregir
log "üîç Analizando contenido a corregir..."
INCORRECT_URLS=$(mysql -h192.168.1.50 -umovieflix_user -p"movieflix_secure_2025!" movieflix_db -se "
    SELECT COUNT(*) FROM content
    WHERE poster_path LIKE '%image.tmdb.org/t/medium%'
       OR poster_path LIKE '%image.tmdb.org/t/original%'
       OR backdrop_path LIKE '%image.tmdb.org/t/medium%'
       OR backdrop_path LIKE '%image.tmdb.org/t/original%'
")

if [ "$INCORRECT_URLS" -eq 0 ]; then
    log "üéâ No hay URLs que corregir. Sistema ya actualizado."
else
    log "üìä URLs para corregir: $INCORRECT_URLS elementos"

    # Ejecutar correcci√≥n
    log "üöÄ Ejecutando correcci√≥n de URLs..."
    node scripts/fix-poster-urls.js

    # Verificar que la correcci√≥n fue exitosa
    REMAINING_INCORRECT=$(mysql -h192.168.1.50 -umovieflix_user -p"movieflix_secure_2025!" movieflix_db -se "
        SELECT COUNT(*) FROM content
        WHERE poster_path LIKE '%image.tmdb.org/t/medium%'
           OR poster_path LIKE '%image.tmdb.org/t/original%'
           OR backdrop_path LIKE '%image.tmdb.org/t/medium%'
           OR backdrop_path LIKE '%image.tmdb.org/t/original%'
    ")

    if [ "$REMAINING_INCORRECT" -eq 0 ]; then
        log "‚úÖ Correcci√≥n exitosa: $INCORRECT_URLS URLs corregidas"
    else
        log "‚ö†Ô∏è Advertencia: Quedan $REMAINING_INCORRECT URLs sin corregir"
    fi
fi

# Reiniciar aplicaci√≥n
log "üîÑ Reiniciando aplicaci√≥n..."
pm2 restart movieflix-backend

# Verificar que la aplicaci√≥n est√° corriendo
sleep 3
if pm2 describe movieflix-backend | grep -q "online"; then
    log "‚úÖ Aplicaci√≥n reiniciada correctamente"
else
    log "‚ùå Error al reiniciar aplicaci√≥n"
    exit 1
fi

# Verificar estado final
log "üìä Verificaci√≥n final del sistema..."
pm2 status

echo ""
echo "üéâ ¬°CORRECCI√ìN COMPLETADA EXITOSAMENTE!"
echo "================================================"
echo "‚úÖ Backup seguro creado: $BACKUP_FILE"
echo "‚úÖ URLs de p√≥sters corregidas"
echo "‚úÖ Aplicaci√≥n reiniciada y funcionando"
echo ""
echo "üåê Verificar en: https://home-movieflix.duckdns.org"
echo "üí° Presiona Ctrl+F5 en el navegador para limpiar cach√©"
echo ""
echo "üìÅ Para futuras restauraciones:"
echo "   mysql -h192.168.1.50 -umovieflix_user -p movieflix_db < $BACKUP_FILE"
