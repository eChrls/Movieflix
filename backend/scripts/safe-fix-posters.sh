#!/bin/bash

# MovieFlix - Script de Backup y Correcci√≥n Segura de URLs P√≥sters
# Fecha: 10 de septiembre de 2025
# Prop√≥sito: Backup autom√°tico + correcci√≥n URLs TMDb con m√°xima seguridad

echo "üõ°Ô∏è MovieFlix - Correcci√≥n Segura URLs P√≥sters TMDb"
echo "================================================="
echo ""
echo "üîí MEDIDAS DE SEGURIDAD IMPLEMENTADAS:"
echo "‚úÖ Backup autom√°tico antes de cualquier cambio"
echo "‚úÖ Verificaci√≥n de integridad de datos"
echo "‚úÖ Rollback disponible en caso de problemas"
echo "‚úÖ Logs detallados de toda la operaci√≥n"
echo ""

# Variables de configuraci√≥n
BACKUP_DIR="/var/www/movieflix/backend/backup"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_FILE="$BACKUP_DIR/movieflix_before_poster_fix_$TIMESTAMP.sql"
LOG_FILE="/var/www/movieflix/backend/logs/poster_fix_$TIMESTAMP.log"

# Funci√≥n de logging
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Verificar que estamos en el directorio correcto
if [ ! -f "scripts/fix-poster-urls.js" ]; then
    echo "‚ùå Error: Ejecuta este script desde /var/www/movieflix/backend/"
    echo "Ubicaci√≥n correcta: /var/www/movieflix/backend/"
    exit 1
fi

# Crear directorios si no existen
mkdir -p "$BACKUP_DIR"
mkdir -p "/var/www/movieflix/backend/logs"

log "üöÄ Iniciando proceso de correcci√≥n segura de URLs p√≥sters"

# Paso 1: Backup de seguridad
log "üì¶ Paso 1: Creando backup de seguridad..."
echo "üì¶ Creando backup de la tabla content..."

mysqldump -h 192.168.1.50 -u movieflix_user -pmovieflix_secure_2025! movieflix_db content > "$BACKUP_FILE"

if [ $? -eq 0 ]; then
    BACKUP_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
    log "‚úÖ Backup creado exitosamente: $BACKUP_FILE ($BACKUP_SIZE)"
    echo "‚úÖ Backup creado: $BACKUP_FILE ($BACKUP_SIZE)"
else
    log "‚ùå Error creando backup. Abortando operaci√≥n."
    echo "‚ùå Error creando backup. Operaci√≥n abortada por seguridad."
    exit 1
fi

# Paso 2: Verificar estado actual
log "üîç Paso 2: Analizando estado actual de URLs..."
echo ""
echo "üîç Analizando URLs actuales en base de datos..."

# Contar URLs incorrectas
INCORRECT_COUNT=$(mysql -h 192.168.1.50 -u movieflix_user -pmovieflix_secure_2025! movieflix_db -se "
SELECT COUNT(*) FROM content
WHERE poster_path LIKE '%image.tmdb.org/t/medium%'
   OR poster_path LIKE '%image.tmdb.org/t/original%'
   OR backdrop_path LIKE '%image.tmdb.org/t/medium%'
   OR backdrop_path LIKE '%image.tmdb.org/t/original%'
")

log "üìä URLs incorrectas encontradas: $INCORRECT_COUNT"
echo "üìä URLs incorrectas encontradas: $INCORRECT_COUNT"

if [ "$INCORRECT_COUNT" -eq 0 ]; then
    log "üéâ No hay URLs incorrectas. Todas las URLs ya est√°n correctas."
    echo "üéâ ¬°Excelente! Todas las URLs ya est√°n correctas."
    echo "üßπ Limpiando archivos temporales..."
    rm "$BACKUP_FILE"
    exit 0
fi

# Paso 3: Mostrar ejemplos de lo que se va a corregir
echo ""
echo "üìã Ejemplos de URLs que se van a corregir:"
mysql -h 192.168.1.50 -u movieflix_user -pmovieflix_secure_2025! movieflix_db -se "
SELECT CONCAT('ID ', id, ': ', title, ' -> ', poster_path) as 'Ejemplo URL Incorrecta'
FROM content
WHERE poster_path LIKE '%image.tmdb.org/t/medium%'
   OR poster_path LIKE '%image.tmdb.org/t/original%'
LIMIT 3
"

# Paso 4: Confirmaci√≥n del usuario
echo ""
echo "‚ö†Ô∏è  CONFIRMACI√ìN REQUERIDA:"
echo "Se van a corregir $INCORRECT_COUNT URLs incorrectas"
echo ""
echo "URLs incorrectas ‚Üí URLs correctas:"
echo "‚ùå /t/medium/w300  ‚Üí ‚úÖ /t/p/w300"
echo "‚ùå /t/original/    ‚Üí ‚úÖ /t/p/w1280"
echo ""
read -p "¬øProceder con la correcci√≥n? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    log "üõë Operaci√≥n cancelada por el usuario"
    echo "üõë Operaci√≥n cancelada. Backup conservado en: $BACKUP_FILE"
    exit 0
fi

# Paso 5: Ejecutar correcci√≥n
log "üîß Paso 5: Ejecutando correcci√≥n de URLs..."
echo ""
echo "üîß Ejecutando correcci√≥n de URLs..."

node scripts/fix-poster-urls.js 2>&1 | tee -a "$LOG_FILE"

# Verificar si la correcci√≥n fue exitosa
if [ ${PIPESTATUS[0]} -eq 0 ]; then
    log "‚úÖ Correcci√≥n de URLs completada exitosamente"
    echo ""
    echo "‚úÖ Correcci√≥n completada exitosamente!"
else
    log "‚ùå Error durante la correcci√≥n de URLs"
    echo "‚ùå Error durante la correcci√≥n. Verifica los logs: $LOG_FILE"
    echo "üîÑ Para restaurar el backup: mysql -h 192.168.1.50 -u movieflix_user -p movieflix_db < $BACKUP_FILE"
    exit 1
fi

# Paso 6: Verificaci√≥n post-correcci√≥n
log "üîç Paso 6: Verificando correcci√≥n..."
echo ""
echo "üîç Verificando que la correcci√≥n fue exitosa..."

REMAINING_INCORRECT=$(mysql -h 192.168.1.50 -u movieflix_user -pmovieflix_secure_2025! movieflix_db -se "
SELECT COUNT(*) FROM content
WHERE poster_path LIKE '%image.tmdb.org/t/medium%'
   OR poster_path LIKE '%image.tmdb.org/t/original%'
   OR backdrop_path LIKE '%image.tmdb.org/t/medium%'
   OR backdrop_path LIKE '%image.tmdb.org/t/original%'
")

log "üìä URLs incorrectas restantes: $REMAINING_INCORRECT"
echo "üìä URLs incorrectas restantes: $REMAINING_INCORRECT"

if [ "$REMAINING_INCORRECT" -eq 0 ]; then
    log "üéâ Verificaci√≥n exitosa: Todas las URLs han sido corregidas"
    echo "üéâ ¬°Perfecto! Todas las URLs han sido corregidas correctamente."
else
    log "‚ö†Ô∏è Advertencia: Quedan $REMAINING_INCORRECT URLs incorrectas"
    echo "‚ö†Ô∏è Advertencia: Quedan $REMAINING_INCORRECT URLs por corregir"
fi

# Paso 7: Reiniciar aplicaci√≥n
log "üîÑ Paso 7: Reiniciando aplicaci√≥n MovieFlix..."
echo ""
echo "üîÑ Reiniciando aplicaci√≥n..."

pm2 restart movieflix-backend

if [ $? -eq 0 ]; then
    log "‚úÖ Aplicaci√≥n reiniciada exitosamente"
    echo "‚úÖ Aplicaci√≥n reiniciada exitosamente"
else
    log "‚ö†Ô∏è Advertencia: Error reiniciando aplicaci√≥n"
    echo "‚ö†Ô∏è Advertencia: Error reiniciando aplicaci√≥n. Verifica manualmente: pm2 status"
fi

# Paso 8: Resumen final
echo ""
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo "üé¨ CORRECCI√ìN DE URLS P√ìSTERS COMPLETADA"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo ""
log "üìä RESUMEN FINAL:"
log "URLs corregidas: $(($INCORRECT_COUNT - $REMAINING_INCORRECT))"
log "URLs restantes: $REMAINING_INCORRECT"
log "Backup creado: $BACKUP_FILE"
log "Log completo: $LOG_FILE"

echo "üìä RESUMEN:"
echo "‚úÖ URLs corregidas: $(($INCORRECT_COUNT - $REMAINING_INCORRECT))"
echo "üìä URLs restantes: $REMAINING_INCORRECT"
echo "üíæ Backup guardado: $BACKUP_FILE"
echo "üìù Log completo: $LOG_FILE"
echo ""
echo "üåê VERIFICACI√ìN FINAL:"
echo "1. Abre: https://home-movieflix.duckdns.org"
echo "2. Presiona Ctrl+F5 para limpiar cach√© del navegador"
echo "3. Verifica que las portadas cargan correctamente"
echo ""
echo "üîÑ ROLLBACK (si es necesario):"
echo "mysql -h 192.168.1.50 -u movieflix_user -p movieflix_db < $BACKUP_FILE"
echo ""
echo "üéâ ¬°Operaci√≥n completada con m√°xima seguridad!"

log "üéâ Operaci√≥n completada exitosamente con todas las medidas de seguridad"
